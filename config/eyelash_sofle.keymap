#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4  &kp N5    &msc SCRL_UP     &kp N6     &kp N7     &kp N8     &kp N9   &kp N0         &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R   &kp T     &msc SCRL_DOWN   &kp Y      &kp U      &kp I      &kp O    &kp P          &kp BSLH
&kp LCTRL   &kp A      &kp S         &kp D         &kp F   &kp G     &msc SCRL_LEFT   &kp H      &kp J      &kp K      &kp L    &kp SEMI       &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V   &kp B     &msc SCRL_RIGHT  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &mo 2     &kp ENTER        &kp SPACE  &kp ENTER  &mo 4      &tog 3   &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1      &kp F2        &kp F3             &kp F4         &kp F5    &trans  &kp F6           &kp F7           &kp F8      &kp F9           &kp F10           &kp DEL
&kp TILDE   &kp LC(Q)   &kp LC(W)     &kp LC(PAGE_UP)    &trans         &trans    &trans  &kp HOME         &kp PAGE_UP      &kp UP      &kp PAGE_DOWN    &kp MINUS         &kp EQUAL
&trans      &kp TILDE   &kp LC(LEFT)  &kp LC(PAGE_DOWN)  &kp LC(RIGHT)  &trans    &trans  &kp END          &kp LEFT         &kp DOWN    &kp RIGHT        &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &kp K_UNDO  &kp K_CUT     &kp K_COPY         &kp K_PASTE    &trans    &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp LC(LA(F11))  &kp F12           &trans
&kp C_MUTE  &kp CAPS    &trans        &trans             &trans         &trans    &trans  &trans           &trans           &trans      &trans           &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "LAYER0";
            bindings = <
&kp ESC     &kp N1          &kp N2  &kp N3  &kp N4  &kp N5       &msc SCRL_UP     &kp N6     &kp N7           &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_SUBTRACT  &kp BACKSPACE
&kp TAB     &kp TAB         &kp Q   &kp W   &kp E   &kp R        &msc SCRL_DOWN   &kp Y      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS      &kp BSLH
&kp CLCK    &kp LEFT_SHIFT  &kp A   &kp S   &kp D   &kp F        &msc SCRL_LEFT   &kp H      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp SEMI         &kp APOS
&kp B       &kp LCTRL       &kp Z   &kp X   &kp V   &kp G        &msc SCRL_RIGHT  &kp N      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp LC(F10)      &kp F12
&kp C_MUTE  &kp LEFT_ALT    &kp M   &mo 1   &kp C   &kp SPACE    &kp ENTER        &kp SPACE  &kp SPACE        &kp KP_NUMBER_0  &tog 3           &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_4 {
            display-name = "layer1";
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &trans  &kp F6           &kp F7           &kp F8      &kp F9           &kp F10           &kp DEL
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &trans  &kp HOME         &kp PAGE_UP      &kp UP      &kp PAGE_DOWN    &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &trans  &kp END          &kp LEFT         &kp DOWN    &kp RIGHT        &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &trans  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp LC(LA(F11))  &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &trans  &trans           &trans           &trans      &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
